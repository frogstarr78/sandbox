#grammar Example
#  rule labels
#    first_letter:[a-z] rest_letters:(', ' letter:[a-z])* '.' {
#      def letters
#        [first_letter] + rest_letters
#      end
#      
#      def rest_letters 
#        super.map do |comma_and_letter|
#          comma_and_letter.letter
#        end
#      end
#    }
#  end
#end

grammar Example
  rule thing
    chars '.'
  end

  rule chars
    f:char r:(', ' l:char)+ {
      def letters
        [f] + r.elements.collect {|e| e.l }
      end
    }
    /
    char {
      def letters
        [self]
      end
    }
  end

  rule char
    [a-z] 
  end
end
