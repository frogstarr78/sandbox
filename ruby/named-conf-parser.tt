grammar Named
  rule config
    options_config? logging_config? zone_records:zone_record+ <NamedConf>
  end

  rule zone_record
    space*
    "zone"      space+
    quoted_name space+
    "in"        space*
    open_curly  space+
    record_options close_curly semi space* <Record>
  end

  rule record_options
    type_def
    file_def
    master_def?
    transfer_source_def?
  end

  rule type_def
    "type"  space+
    type:( "slave" / "master" / "forward" / "hint" / "stub" / "delegation-only" ) space*
    semi    space+
  end

  rule file_def
    "file" space+ 
    file_path:quoted_name space?
    semi space+
  end

  rule master_def
    "masters" space+
    open_curly space*
    raw_ipv4 space?
    semi space*
    close_curly space?
    semi space+
  end

  rule transfer_source_def
    "transfer-source" space+
    raw_ipv4 space?
    semi space+
  end

  rule options_config
    space*
    "options" space+
    open_curly space+
    options_options
    close_curly semi space*
  end

  rule options_options
    directory_path:file_config_def
    dump_file:file_config_def
    statistics_file:file_config_def
    allow_query:net_allow_def
    allow_query_cache:net_allow_def
    transfer_source:host_allow_def
    allow_recursion:net_allow_def
    query_source_def?
    notify_def:boolean_def
  end

  rule file_config_def
    ( "directory" / "dump-file" / "statistics-file" ) space+
    file_path:quoted_name space?
    semi space+
  end

  rule host_allow_def
    ( "transfer-source" ) space+
    ( raw_ipv4 / '*' ) strict_port_def? 
    semi space+
  end

  rule strict_port_def
    space+ 'port' space+ number+
  end

  rule loose_port_def
    space+ 'port' space+ ( number+ / '*' )
  end

  rule net_allow_def
    ( "allow-query-cache" / "allow-query" / "allow-recursion" ) space+
    open_curly space*
    host_list_def close_curly space?
    semi space+
  end

  rule host_list_def
    'any' space?
    semi space* / 
    ( raw_ipv4 space?
    semi space* )*
  end

  rule query_source_def
    'query-source' space
    'address' space
    '*' space
    'port' space
    number+ space?
    semi space+
  end

  rule boolean_def
    ( 'notify' / 'print-time' ) space
    ( 'yes' / 'no' ) semi space+
  end

  rule logging_config
    space*
    "logging" space+
    open_curly space+
    logging_options close_curly semi space*
  end

  rule logging_options
    channel_def
    category_def+
  end

  rule channel_def
    'channel' space
    'query_logging' space
    open_curly space+
    log_file_def
    print_time:boolean_def close_curly semi space+
  end

  rule log_file_def
    "file" space+
    quoted_name space+
    'versions' space
    number space
    'size' space
    number+ ( 'M' / 'G' / 'K' )? semi space+
  end

  rule category_def
    'category' space
    ( 'queries' / 'lame-servers' ) space
    open_curly space+
    ( 'query_logging' / 'null' ) semi space+
    close_curly semi space+
  end

  rule space
    ( "\t" / " " / "\n" / comments ) space*
  end

  rule quoted_name
    quote name:( !quote . )+ quote
  end

  rule quote
    "\""
  end

  rule open_curly
    "{"
  end

  rule semi
    ";"
  end

  rule newline
    "\n"
  end

  rule raw_ipv4
    ( octet dot octet dot octet dot octet cidr? )+
  end

  rule octet
    number 1..3 
  end

  rule cidr
    '/' ( 
       ( '3'  [0-2]  ) /
       ( '1'  number ) /
       ( '2'  number ) /
       ( '0'? number ) 
     )
  end

  rule number
    [0-9]
  end

  rule dot
    '.'
  end

  rule close_curly
    "}"
  end

  rule comments
    sh_comment / cplus_comment / multiline_c_comment
  end

  rule sh_comment
    '#' ( !newline . )*
  end

  rule cplus_comment
    '//' ( !newline . )*
  end

  rule multiline_c_comment
    '/*'
    ( !'*/' . )*
    '*/'
  end

end
