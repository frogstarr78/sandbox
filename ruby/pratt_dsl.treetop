module Pratt
	grammar Dsl
		rule sentence
      fragments '.'
		end

    rule fragments
			first:fragment rest:( space conjunction space last:fragment )* { 
        def to_a
          [first] + rest.elements.collect {|e| e.last }
        end
      }
    end

		rule fragment
			verb space noun space preposition space temporal_literal {
        def method
          verb.to_sym
        end

				def project
					noun.find
				end

        def to_s
          text_value
        end

        def time
          temporal_literal.value
        end
			}
		end

		rule conjunction
			'and'
		end

		rule temporal_literal
			( ![\ .] . )+ #<TemporalValue>
		end

		rule verb
			( 
       'begin' / 'Begin' / 
			'start' / 'Start' /
			'restart' / 'Restart' /
			'cease' / 'Cease' /
			'end' / 'End'
      ) <OrmMethods>
		end

		rule preposition
			'on' / 'at'
		end

		rule noun
			( !space . )+ <OrmModel>
		end

		rule space
			' '
		end
	end
end
