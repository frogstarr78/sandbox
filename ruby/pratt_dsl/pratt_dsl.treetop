module Pratt
	grammar Dsl

		rule sentence
      fragment more_fragments:(conjunction fragment)* period {
        def fragments
          [fragment] + more_fragments.elements.map {|frag| frag.fragment }
        end
      }
    end

		rule fragment
      verb space noun space temporal {
        def to_s
          text_value
        end
      }
		end

		rule verb
			( 
       'begin' / 'Begin' / 
			'start' / 'Start' /
			'restart' / 'Restart' /
			'cease' / 'Cease' /
			'end' / 'End'
      ) <OrmMethods>
		end

		rule noun
			( !space . )+ <OrmModel>
		end

		rule temporal
      preposition space literal <TemporalValue>
		end

    rule literal
      ( ( !conjunction !period . )+ / ( !period !conjunction . )+ )
    end

    rule morning_r_evening
      ( [aA] / [pP] ) [mM]
    end

		rule preposition
			'on' / 'at'
		end

    rule conjunction
      continuation 
    end

		rule continuation
			( comma? space 'and' / comma ) space 
		end

		rule space
			' '
		end

    rule comma
      ','
    end

    rule period
      '.'
    end
	end
end
